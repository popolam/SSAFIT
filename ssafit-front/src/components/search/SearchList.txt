<template>
  <div>
    <div v-if="isLogin" class="d-flex justify-center align-center">
        <div class="search-tag">추천 검색어 : </div>
        <v-chip v-for="search in searches" :key="search.no" class="search-tag ma-2 text-center" color="#FF0066">{{ search.keyword }}</v-chip>
    </div>
    <v-dialog
      v-model="dialog"
      max-height="80vh"
      max-width="80vw"
    >
      <template v-slot:activator="{ attrs }">
        <v-container fluid>
          <v-row>
            <v-col v-for="video in videos" :key=video.videoId lg="3" md="4" sm="6">
              <div class="card blur rounded-lg mx-auto">
                <div
                  v-bind="attrs"
                  @click="setVideoId(video.videoId)"
                >
                  <v-img
                    :src="'https://img.youtube.com/vi/' + video.videoId + '/hqdefault.jpg'"
                    height="200px"
                  ></v-img>

                  <div style="margin: 5px; font-size: 12pt; font-weight: bolder; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">{{ video.title }}</div>
                  <div style="margin: 5px; font-size: 10pt; font-weight: lighter; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">{{ video.channelName }}</div>
                </div>
                <div>
                  <div
                    v-if="isLogin"
                    align="right"
                    class="mx-0"
                  >
                    <v-btn icon color="white">
                      <v-icon>bookmark_border</v-icon>
                    </v-btn>
                    <v-btn icon color="white">
                      <v-icon>favorite_border</v-icon>
                    </v-btn>
                    <v-chip class="ma-2" color="#9DC3E6">{{ video.tagName }}</v-chip>
                  </div>
                </div>

              </div>
            </v-col>
          </v-row>
        </v-container>
      </template>

      <v-card style="background: none">
        <div class="blur rounded-lg d-flex flex-column align-center dialogCard">
          <!-- <div class="my-5">{{video.title}}</div> -->
          <div class="my-2" style="width: 75vw"><hr /></div>
          <iframe
            style="width: 75vw; min-height: 35vw;"
            :src="'https://www.youtube.com/embed/' + videoId" 
            title="YouTube video player" 
            frameborder="0" 
            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" 
            allowfullscreen
          ></iframe>
          <div
            v-if="isLogin"
            class="d-flex align-center"
            style="width: 75vw"
          >
            <span class="flex-grow-1">{{ video.channelName }}</span>
            <v-btn icon color="white">
              <v-icon>bookmark_border</v-icon>
            </v-btn>

            <v-btn icon color="white">
              <v-icon>favorite_border</v-icon>
            </v-btn>
            <v-chip class="ma-2" color="#9DC3E6">{{ video.tagName }}</v-chip>
          </div>
          <div class="my-2" style="width: 75vw"><hr /></div>
          <div v-if="isLogin" style="width: 75vw">
            {{ reviews }}
          </div>
          <div v-else class="my-16">
            로그인 후에 댓글을 볼 수 있습니다.
          </div>
        </div>
      </v-card>
    </v-dialog>
  </div>
</template>

<script>
import {mapState} from 'vuex';

export default {
  data() {
    return {
      message: '',
      dialog: false,
      videoId: '',
    }
  },
  computed: {
    ...mapState([
      "isLogin", "videos", "video", "reviews", "searches"
    ])
  },
  watch: {
    dialog: function() {
      if(!this.dialog) {
        // 영상 끄기
        this.videoId = '';
        // 영상 가장 위로 올리기
        document.getElementsByClassName('dialogCard')[0].scrollTop = 0;
      }
    }
  },
  methods: {
    setVideoId(videoId) {
      this.videoId = videoId;
      this.$store.dispatch("getVideo", { videoId: videoId });
      if(this.isLogin) this.$store.dispatch("getReviews", { videoId: videoId });
      setTimeout(() => this.dialog = true, 200);
    },
  },
  created() {
    const payload = {
      searchText: this.$router.currentRoute.query.q
    };
    this.$store.dispatch("getVideos", payload);
    this.$store.dispatch("getSearches");
  }
}
</script>

<style>
</style>